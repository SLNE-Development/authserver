name: Publish to Maven & Create GitHub Release

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Collect Workflow Telemetry
        uses: catchpoint/workflow-telemetry-action@v2

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-${{ runner.os }}-

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'graalvm'
          java-version: '21'

      - name: Build all modules with Gradle
        run: ./gradlew buildFatJar --parallel --no-scan

      - name: Check all modules with Gradle
        run: ./gradlew check --parallel --no-scan

      - name: Extract Project Version
        id: get_version
        run: echo "VERSION=$(./gradlew properties | grep "^version:" | awk '{print $2}')" >> $GITHUB_ENV

      - name: Find and filter JAR files
        id: find_jars
        run: |
          echo "JAR_FILES<<EOF" >> $GITHUB_ENV
          find . -type f -name "*.jar" | grep -v "build/libs" | grep -v "build/distributions" | grep -v "build/tmp" | grep -v "build/classes" | grep -v "build/resources" | grep -v "build/dependency-cache" | grep -v "build/processed-resources" | grep -v "build/processed-classes" | grep -v "build/processed-test-resources" | grep -v "build/processed-test-classes" | grep -v "build/test-results" | grep -v "build/reports

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: Release ${{ env.VERSION }}
          draft: false
          prerelease: false
          files: ${{ env.JAR_FILES }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}